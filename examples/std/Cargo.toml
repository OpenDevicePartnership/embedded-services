[workspace]

[package]
name = "std-examples"
version = "0.1.0"
edition = "2024"

[workspace.lints.rust]
warnings = "deny"

[lints]
workspace = true

[dependencies]
embassy-sync = { version = "0.7.2", features = [
    "log",
    "std",
] }
embassy-time-driver = { version = "0.2.0", optional = true }
embassy-time = { version = "0.4.0", features = [
    "log",
    "std",
] }
embassy-futures = "0.1.2"
embassy-executor = { version = "0.9.0", features = [
    "arch-std",
    "executor-thread",
    "log",
] }

embedded-usb-pd = { git = "https://github.com/OpenDevicePartnership/embedded-usb-pd" }
embedded-services = { path = "../../embedded-service", features = ["log"] }
power-policy-service = { path = "../../power-policy-service", features = [
    "log",
] }
cfu-service = { path = "../../cfu-service", features = ["log"] }
embedded-cfu-protocol = { git = "https://github.com/OpenDevicePartnership/embedded-cfu" }

embedded-batteries-async = "0.2.0"
battery-service = { path = "../../battery-service", features = ["log"] }
type-c-service = { path = "../../type-c-service", features = ["log"] }

embedded-sensors-hal-async = "0.3.0"
embedded-fans-async = "0.2.0"
thermal-service = { path = "../../thermal-service", features = ["log"] }

env_logger = "0.9.0"
log = "0.4.14"
heapless = "0.8.0"
static_cell = "2"
embedded-hal-async = "1.0.0"
embedded-hal-mock = { version = "0.11.1", features = ["embedded-hal-async"] }

critical-section = { version = "1.1", features = ["std"] }

[lib]
name = "std_examples"
path = "src/lib/lib.rs"

[[bin]]
name = "type-c-basic"
path = "src/bin/type_c/basic.rs"

[[bin]]
name = "type-c-service"
path = "src/bin/type_c/service.rs"

[[bin]]
name = "type-c-external"
path = "src/bin/type_c/external.rs"

[[bin]]
name = "type-c-unconstrained"
path = "src/bin/type_c/unconstrained.rs"

[[bin]]
name = "type-c-ucsi"
path = "src/bin/type_c/ucsi.rs"

# Needed otherwise cargo will pull from git
[patch."https://github.com/OpenDevicePartnership/embedded-services"]
embedded-services = { path = "../../embedded-service" }
